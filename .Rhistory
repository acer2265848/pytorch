ts1=c(2.02, 2.33, 2.99, 6.85, 9.20, 8.80, 7.50, 6.00, 5.85, 3.85, 4.85, 3.85, 2.22, 1.45, 1.34)
ts2=c(0.50, 1.29, 2.58, 3.83, 3.25, 4.25, 3.83, 5.63, 6.44, 6.25, 8.75, 8.83, 3.25, 0.75, 0.72)
znorm <- function(ts){
ts.mean <- mean(ts)
ts.dev <- sd(ts)
(ts - ts.mean)/ts.dev
}
ts1_znorm=znorm(ts1)
ts2_znorm=znorm(ts2)
paa <- function(ts, paa_size){
len = length(ts)
if (len == paa_size) {
ts
}
else {
if (len %% paa_size == 0) {
colMeans(matrix(ts, nrow=len %/% paa_size, byrow=F))
}
else {
res = rep.int(0, paa_size)
for (i in c(0:(len * paa_size - 1))) {
idx = i %/% len + 1# the spot
pos = i %/% paa_size + 1 # the col spot
res[idx] = res[idx] + ts[pos]
}
for (i in c(1:paa_size)) {
res[i] = res[i] / len
}
res
}
}
}
paa_size=9
s1_paa = paa(ts1_znorm,paa_size)
s2_paa = paa(ts2_znorm,paa_size)
result2 <- read.csv("method2_104.txt",header=FALSE)
names(result2) <- c("method","whole","experiments",
"r1","r2","r3","r4","r5","average","time")
levels(result2$method) <- c(levels(result2$method), "RP")
result2$method[result2$method == 'recurrence_plots'] <- 'RP'
result2 <- result2[result2$whole=="True",]
result2$method <- as.character(result2$method)
setwd("D:/Thesis/pytorch")
result2 <- read.csv("method2_104.txt",header=FALSE)
names(result2) <- c("method","whole","experiments",
"r1","r2","r3","r4","r5","average","time")
levels(result2$method) <- c(levels(result2$method), "RP")
result2$method[result2$method == 'recurrence_plots'] <- 'RP'
result2 <- result2[result2$whole=="True",]
result2$method <- as.character(result2$method)
View(result2)
View(result2)
result <- read.csv("method_color1C.txt",header=FALSE)
names(result) <- c("method","whole","experiments",
"r1","r2","r3","r4","r5","average","time")
levels(result$method) <- c(levels(result$method), "RP")
result$method[result$method == 'recurrence_plots'] <- 'RP'
result <- result[result$whole=="True",]
result$method <- as.character(result$method)
df <- result %>%
dplyr::group_by(method) %>%
dplyr::summarise(mean=mean(average),
sd=sd(average))
result <- read.csv("method_color1C.txt",header=FALSE)
names(result) <- c("method","whole","experiments",
"r1","r2","r3","r4","r5","average","time")
levels(result$method) <- c(levels(result$method), "RP")
result$method[result$method == 'recurrence_plots'] <- 'RP'
result <- result[result$whole=="True",]
result$method <- as.character(result$method)
df <- result %>%
dplyr::group_by(method) %>%
dplyr::summarise(mean=mean(average),
sd=sd(average))
library(dplyr)
library(data.table)
library(reshape2)
library(reshape)
library(ggplot2)
library(gridExtra)
library(grid)
df <- result %>%
dplyr::group_by(method) %>%
dplyr::summarise(mean=mean(average),
sd=sd(average))
View(result2)
result <- read.csv("method2_104.txt",header=FALSE)
names(result) <- c("method","whole","experiments",
"r1","r2","r3","r4","r5","average","time")
levels(result$method) <- c(levels(result$method), "RP")
result$method[result$method == 'recurrence_plots'] <- 'RP'
result <- result[result$whole=="True",]
result$method <- as.character(result$method)
df <- result %>%
dplyr::group_by(method) %>%
dplyr::summarise(mean=mean(average),
sd=sd(average))
result2 <- read.csv("method_color1C.txt",header=FALSE)
names(result2) <- c("method","whole","experiments",
"r1","r2","r3","r4","r5","average","time")
levels(result2$method) <- c(levels(result2$method), "RP")
result2$method[result2$method == 'recurrence_plots'] <- 'RP'
result2 <- result2[result2$whole=="True",]
result2$method <- as.character(result2$method)
df2 <- result2 %>%
dplyr::group_by(method,whole) %>%
dplyr::summarise(mean=mean(average),
sd=sd(average))
View(df2)
View(df)
result <- result[ method == 'RP' ]
result <- result[ result$method == 'RP' ]
View(result)
result <- result[ $method == 'RP' ]
result <- result[result$method == 'RP' ]
result <- result[result$method != 'RP' ]
View(result)
result$method[result$method == 'recurrence_plots'] <- 'RP'
result <- result[result$method != 'RP' ]
result$method <- result[result$method != 'RP' ]
result <- result$method[result$method != 'RP' ]
result <- read.csv("method2_104.txt",header=FALSE)
names(result) <- c("method","whole","experiments",
"r1","r2","r3","r4","r5","average","time")
levels(result$method) <- c(levels(result$method), "RP")
result$method[result$method == 'recurrence_plots'] <- 'RP'
result <- result$method[result$method != 'RP' ]
result <- read.csv("method2_104.txt",header=FALSE)
names(result) <- c("method","whole","experiments",
"r1","r2","r3","r4","r5","average","time")
levels(result$method) <- c(levels(result$method), "RP")
result$method[result$method == 'recurrence_plots'] <- 'RP'
result <- result$method[result$method != 'RP' ]
result <- result[$method != 'RP' ]
result <- result[(result$method != 'RP') ]
result <- result[result$method != 'RP' ]
result <- read.csv("method2_104.txt",header=FALSE)
names(result) <- c("method","whole","experiments",
"r1","r2","r3","r4","r5","average","time")
levels(result$method) <- c(levels(result$method), "RP")
result$method[result$method == 'recurrence_plots'] <- 'RP'
result <- result[result$method != 'RP' ]
result <- result[result$method != 'RP' ,]
View(result)
df <- result %>%
dplyr::group_by(method) %>%
dplyr::summarise(mean=mean(average),
sd=sd(average))
result2 <- read.csv("method_color1C.txt",header=FALSE)
names(result2) <- c("method","whole","experiments",
"r1","r2","r3","r4","r5","average","time")
levels(result2$method) <- c(levels(result2$method), "RP")
result2$method[result2$method == 'recurrence_plots'] <- 'RP'
result2 <- result2[result2$whole=="True",]
result2$method <- as.character(result2$method)
df2 <- result2 %>%
dplyr::group_by(method,whole) %>%
dplyr::summarise(mean=mean(average),
sd=sd(average))
result$Aggregation_Method  = "RGB"
result2$Aggregation_Method = "Grayscale"
# result3$Aggregation_Method = "Append RGB 128"
# result4$Aggregation_Method = "Append RGB 64"
com_resul <- rbind(result,result2)
# com_resul <- rbind(result3,result4)
# com_resul <- rbind(com_resul,result4)
com_resul$Aggregation_Method = factor(com_resul$Aggregation_Method ,
levels = c( "RGB","Grayscale"))
df5 <- com_resul %>%
dplyr::group_by(method,Aggregation_Method) %>%
dplyr::summarise(a_mean=mean(average),
t_mean=mean(time),
sd=sd(average))
ggplot(com_resul,aes(x=method,y=average))+
geom_boxplot(aes(color=method),size=1.2)+
geom_point(data = df5,aes(y=a_mean,x=method),shape=2,size=3,color="blue")+
geom_text(data = df5, aes( label=round(a_mean,2),y = a_mean+0.8),color="blue",size=7)+
theme_bw()+
theme(axis.title.x = element_text(size = rel(1.7)),
axis.title.y = element_text(size = rel(1.7)),
axis.text.x = element_text(hjust = 1, size = rel(2.2)),
axis.text.y = element_text(hjust = 1, size = rel(1.8)),
plot.title = element_text(size=rel(1.7),hjust = 0.5),
legend.position="none",
strip.text = element_text(size=rel(1.7)))+
ylab("Error rate")+
xlab("Concatenating Method")+
facet_wrap(~Aggregation_Method, nrow = 1)
df5 <- com_resul %>%
dplyr::group_by(method,Aggregation_Method) %>%
dplyr::summarise(a_mean=mean(average),
t_mean=mean(time),
sd=sd(average))
ggplot(com_resul,aes(x=method,y=average))+
geom_boxplot(aes(color=method),size=1.2)+
geom_point(data = df5,aes(y=a_mean,x=method),shape=2,size=3,color="blue")+
geom_text(data = df5, aes( label=round(a_mean,2),y = a_mean+0.8),color="blue",size=7)+
theme_bw()+
theme(axis.title.x = element_text(size = rel(1.7)),
axis.title.y = element_text(size = rel(1.7)),
axis.text.x = element_text(hjust = 1, size = rel(2.2)),
axis.text.y = element_text(hjust = 1, size = rel(1.8)),
plot.title = element_text(size=rel(1.7),hjust = 0.5),
legend.position="none",
strip.text = element_text(size=rel(1.7)))+
ylab("Error rate")+
xlab("Concatenating Method")+
facet_wrap(~Aggregation_Method, nrow = 1)
library(dplyr)
library(data.table)
library(reshape2)
library(reshape)
library(ggplot2)
library(gridExtra)
library(grid)
ggplot(com_resul,aes(x=method,y=average))+
geom_boxplot(aes(color=method),size=1.2)+
geom_point(data = df5,aes(y=a_mean,x=method),shape=2,size=3,color="blue")+
geom_text(data = df5, aes( label=round(a_mean,2),y = a_mean+0.8),color="blue",size=7)+
theme_bw()+
theme(axis.title.x = element_text(size = rel(1.7)),
axis.title.y = element_text(size = rel(1.7)),
axis.text.x = element_text(hjust = 1, size = rel(2.2)),
axis.text.y = element_text(hjust = 1, size = rel(1.8)),
plot.title = element_text(size=rel(1.7),hjust = 0.5),
legend.position="none",
strip.text = element_text(size=rel(1.7)))+
ylab("Error rate")+
xlab("Concatenating Method")+
facet_wrap(~Aggregation_Method, nrow = 1)
